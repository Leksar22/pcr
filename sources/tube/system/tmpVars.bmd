// tmp переменные  содержат Z координаты соответствующих точек
 tz0m    #calc "-1.0 * $Rb";
 tz1     #calc "$sin45 * $Rb";
 tz1m    #calc "-1.0 * $tz1";
 tz2     #calc "$a1 * $Rb";
 tz2m    #calc "-1.0 * $tz2";
 tz3     #calc "$sin45 * $a1 * $Rb";
 tz3m    #calc "-1.0 * $tz3";
 tz1m_2    #calc "-1.0 * $tz1 - 0.1";


 k_normal # calc "($R - (($Lw - $Lh) * ($R - $Rb)/$Lw + $Rb)) / ($sin60 * $Rb - ($L * ($Lw - $Lh) / sqrt(((double)$R - $Rb)*($R - $Rb) + $L*$L)))"; // угловой коэфф между 72 и 52 в плоскости XOZ
 alpha_normal  # calc "atan($k_normal)";
 tz6      #calc "sin(45.0 - $alpha_normal) * $Rb";  // z
 tz6m    #calc "-1.0 * $tz6";

 tz6xy  #calc "sqrt(1.0 - pow($tz6m, 2))";  // Rb
 tz6xym  #calc "-1.0 * $tz6xy";  // tz0m
 tz6xy_45 #calc "$tz6xy * $sin45"; // tz1
 tz6xy_45m #calc "-1.0 * $tz6xy_45";  // tz1m

 tc6_01 #calc "$sin225 * $tz6xy";
 tc6_01m #calc "-1.0 * $tc6_01";
 tc6_02 #calc "$sin675 * $tz6xy";
 tc6_02m #calc "-1.0 * $tc6_02";



 tz7     #calc "$sin60 * $Rb"; //tz1
 tz7m     #calc "-1.0 * $tz7";  //tz1m
 txy7_1  #calc "$sin30 * $tz7";  // txy1
 txy7_1m  #calc "-1.0 * $txy7_1"; // txy1m

 t_test_xy # calc "$tz1 / 2.0";    // #calc "-1.0 * ($Rb * $sin0 + $Rb * $sin90) / 2.0 * $sin45";  # сместили угловые точки (где проблемный участок сетки)
 t_test_xy_m # calc "-1.0 * $t_test_xy";
 t_test_z # calc "-1.0 * sqrt(pow($Rb, 2) - pow($t_test_xy, 2))";
 // t_test_z_1 # calc "-1.0 * sqrt(pow($Rb, 2) - pow($tz1m, 2))"; // (для углов полусферы, т.к. вероятно в исходной реализации была неправильная высота)

// 32 т. x=$tz6xy z=$tz6m
// 72 x=$tx8 z=$tz7
 // t_test_y #calc "sqrt(pow($Rb, 2) - pow($t_test_x, 2) - pow($tz1m, 2))";

// A: ( 0.0   $tz1m  $tz1m )
// B:  ( $tz1   0.0    $tz1m )

// C: ( $txy7_1  $txy7_1m $tz1m )

 // tz111    #calc " $tz1 * $a2 * $sin45";
 //tz111    #calc " $Rb / 2.0 ";
 tz111    #calc " $Rb / 1.9 ";
 tz111m   #calc "-1.0 * $tz111 ";
 txy333     #calc "$a2 *  $tz111";
 txy333m     #calc " -1.0 * $txy333 ";

 tc0222    #calc "$sin45 * $a2 ";
 tc0222m   #calc " -1.0 * $tc0222";
 tc0111   #calc "$sin45 * $a2 ";
 tc0111m   #calc " -1.0 * $tc0111";


 txyTTT  #calc " $txy333m * $sin45";
 txyTTTm  #calc " $txyTTT * -1.0";
 tzZZZ  #calc " $tz2 * $sin45";
 tzZZZm  #calc " -1.0 * $tzZZZ";


 tz222m   #calc " -1.0 * $tz1 * $a2 * $sin45";

 txy1    #calc "$sin45 * $tz1";
 txy1m   #calc "-1.0 * $txy1";
 txy3    #calc "$a2 * $sin45 * $tz3";
 txy3m   #calc "-1.0 * $txy3";
 txy4    #calc "$a2 * $tz3";
 txy4m   #calc "-1.0 * $txy4";

 Lw      #calc "sqrt(((double)$R - $Rb)*($R - $Rb) + $L*$L)";
 tz5     #calc "$L * ($Lw - $Lh) / $Lw";
 tx6     #calc "($Lw - $Lh) * ($R - $Rb)/$Lw + $Rb";

// phi     #calc "atan(($R - $Rb)/$L)";
// tz5     #calc "$L - cos($phi) * $Lh";
// tx6     #calc "$Rb + $tz5 / cos($phi)";
 tx6m    #calc "-1.0 * $tx6";
 tx5     #calc "$a1 * $tx6";
 tx5m    #calc "-1.0 * $tx5";
 txy5    #calc "$a2 * $sin45 * $tx5";
 txy5m   #calc "-1.0 * $txy5";
 txy6    #calc "$sin45 * $tx6";
 txy6m   #calc "-1.0 * $txy6";
  
 tz7     $L;
 tx8     $R;
 tx8m    #calc "-1.0 * $tx8";
 tx7     #calc "$a1 * $tx8";
 tx7m    #calc "-1.0 * $tx7";
 txy7    #calc "$a2 * $sin45 * $tx7";
 txy7m   #calc "-1.0 * $txy7";
 txy8    #calc "$sin45 * $tx8";
 txy8m   #calc "-1.0 * $txy8";

 tc01    #calc "$sin225 * $Rb";
 tc01m   #calc "-1.0 * $tc01";
 tc02    #calc "$sin675 * $Rb";
 tc02m   #calc "-1.0 * $tc02";

 tc31    #calc "$sin225 * $tz1";
 tc31m   #calc "-1.0 * $tc31";
 tc32    #calc "$sin675 * $tz1";
 tc32m   #calc "-1.0 * $tc32";

 tc61    #calc "$sin225 * $tx6";
 tc61m   #calc "-1.0 * $tc61";
 tc62    #calc "$sin675 * $tx6";
 tc62m   #calc "-1.0 * $tc62";

 tc81    #calc "$sin225 * $tx8";
 tc81m   #calc "-1.0 * $tc81";
 tc82    #calc "$sin675 * $tx8";
 tc82m   #calc "-1.0 * $tc82";

// 13
// ( $t_test_xy  $t_test_xy  $t_test_z )

// 15
//( $t_test_xy_m $t_test_xy  $t_test_z )

t_x_super # calc "$Rb / sqrt(2.0) + sqrt(pow($Rb / sqrt(2.0), 2) / 2.0) * -1.0"; // # calc "pow($t_test_xy - $Rb / sqrt(2.0), 2)";   //
t_x_super_m # calc "-1.0 * $t_x_super";
t_z_super # calc " sqrt(pow($Rb / sqrt(2.0), 2) - pow($t_x_super, 2) * 2.0)";
